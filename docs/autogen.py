import pathlib
import shutil

import keras_autodoc

import autokeras as ak

PAGES = {
    'image_classifier.md': [
        ak.ImageClassifier,
        ak.ImageClassifier.fit,
        ak.ImageClassifier.predict,
        ak.ImageClassifier.evaluate,
    ],
    'image_regressor.md': [
        ak.ImageRegressor,
        ak.ImageRegressor.fit,
        ak.ImageRegressor.predict,
        ak.ImageRegressor.evaluate,
    ],
    'text_classifier.md': [
        ak.TextClassifier,
        ak.TextClassifier.fit,
        ak.TextClassifier.predict,
        ak.TextClassifier.evaluate,
    ],
    'text_regressor.md': [
        ak.TextRegressor,
        ak.TextRegressor.fit,
        ak.TextRegressor.predict,
        ak.TextRegressor.evaluate,
    ],
    'structured_data_classifier.md': [
        ak.StructuredDataClassifier,
        ak.StructuredDataClassifier.fit,
        ak.StructuredDataClassifier.predict,
        ak.StructuredDataClassifier.evaluate,
    ],
    'structured_data_regressor.md': [
        ak.StructuredDataRegressor,
        ak.StructuredDataRegressor.fit,
        ak.StructuredDataRegressor.predict,
        ak.StructuredDataRegressor.evaluate,
    ],
    'auto_model.md': [
        ak.AutoModel,
        ak.AutoModel.fit,
        ak.AutoModel.predict,
        ak.AutoModel.evaluate,
    ],
    'graph_auto_model.md': [
        ak.GraphAutoModel,
        ak.GraphAutoModel.fit,
        ak.GraphAutoModel.predict,
        ak.GraphAutoModel.evaluate,
    ],
    'node.md': [
        ak.ImageInput,
        ak.Input,
        ak.StructuredDataInput,
        ak.TextInput,
    ],
    'block.md': [
        ak.ConvBlock,
        ak.DenseBlock,
        ak.EmbeddingBlock,
        ak.Merge,
        ak.ResNetBlock,
        ak.RNNBlock,
        ak.SpatialReduction,
        ak.TemporalReduction,
        ak.XceptionBlock,
        ak.ImageBlock,
        ak.StructuredDataBlock,
        ak.TextBlock,
    ],
    'preprocessor.md': [
        ak.FeatureEngineering,
        ak.ImageAugmentation,
        ak.LightGBMBlock,
        ak.Normalization,
        ak.TextToIntSequence,
        ak.TextToNgramVector,
    ],
    'head.md': [
        ak.ClassificationHead,
        ak.RegressionHead,
    ],
}


ROOT = 'http://autokeras.com/'

autokeras_dir = pathlib.Path(__file__).resolve().parents[1]


def generate(dest_dir):
    template_dir = autokeras_dir / 'docs' / 'templates'
    doc_generator = keras_autodoc.DocumentationGenerator(
        PAGES,
        'https://github.com/keras-team/autokeras/blob/master',
        template_dir,
        autokeras_dir / 'examples',
    )
    doc_generator.generate(dest_dir)
    readme = (autokeras_dir / 'README.md').read_text()
    index = (template_dir / 'index.md').read_text()
    index = index.replace('{{autogenerated}}', readme[readme.find('##'):])
    (dest_dir / 'index.md').write_text(index, encoding='utf-8')
    shutil.copyfile(autokeras_dir / '.github' / 'CONTRIBUTING.md',
                    dest_dir / 'contributing.md')


if __name__ == '__main__':
    generate(autokeras_dir / 'docs' / 'sources')
